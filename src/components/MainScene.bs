enum MovieCategory
    Action = "Action"
    Comedy = "Comedy"
    Horror = "Horror"
    Drama = "Drama"
    Animation = "Animation"
end enum

sub init()
    m.categories = m.top.CreateChild("ButtonGroup")
    m.categories.buttons = [
        MovieCategory.Action,
        MovieCategory.Comedy,
        MovieCategory.Horror,
        MovieCategory.Drama,
        MovieCategory.Animation
    ]

    m.categories.id = "categories"
    m.categories.translation = [96, 205]

    m.categories.observeField("buttonFocused", "handleCategoryButtonFocused")

    m.movieShowcase = m.top.findNode("movieShowcase")
    m.movieShowcase.visible = false

    m.thumbnails = m.top.findNode("thumbnails")
    m.thumbnails.observeField("rowItemFocused", "handleMovieFocused")

    m.categories.SetFocus(true)

    loadCategory(MovieCategory.Action)
end sub

sub loadCategory(category as string)
    m.getDataTask = CreateObject("roSGNode", "GetDataTask")

    m.getDataTask.inputCategory = category
    m.getDataTask.control = "RUN"

    ' Task is async, so we need to observe the output

    m.getDataTask.observeField("output", "handleGetDataTaskOutput")
end sub

sub handleGetDataTaskOutput()
    m.getDataTask.unobserveField("output")

    output = m.getDataTask.output
    m.thumbnails.content = output
    m.movieShowcase.visible = true
    
    renderMovieShowcase(m.thumbnails.content.getChild(0).getChild(0))
end sub

sub handleCategoryButtonFocused()
    buttonSelected = m.categories.buttonFocused
    category = m.categories.buttons[buttonSelected]

    loadCategory(category)
end sub

sub handleMovieFocused()
    rowItemFocused = m.thumbnails.rowItemFocused
    rowFocused = rowItemFocused[0]
    itemFocused = rowItemFocused[1]

    movieData = m.thumbnails.content.getChild(rowFocused).getChild(itemFocused)
    renderMovieShowcase(movieData)
end sub

sub renderMovieShowcase(movieData as object)
    titleLabel = m.top.findNode("movieShowcase__title")
    titleLabel.text = movieData.title

    directedByLabel = m.top.findNode("movieShowcase__directedBy")
    directedByLabel.text = `Directed by: ${movieData.director}`

    framePoster = m.top.findNode("movieShowcase__framePoster")
    framePoster.uri = movieData.frameUrl
end sub

function onKeyEvent(key as string, pressed as boolean) as boolean
    if (not pressed)
        return false
    end if

    if (key = "right")
        m.thumbnails.SetFocus(true)
    else if (key = "left")
        m.categories.SetFocus(true)
    end if

    return false
end function
